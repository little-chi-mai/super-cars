{"version":3,"sources":["cars/car.ts","helpers/currencyFormatter.ts","cars/car.component.tsx","cars/car.api.ts","search/search.component.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["SHIFT_TYPES","currencyFormatter","number","fractionDigits","CurrencyFormatter","Intl","NumberFormat","style","currency","maximumFractionDigits","format","CarComponent","carDetails","model","className","make","fuelType","shiftType","colour","price","features","join","carData","SearchComponent","searchTerm","setSearchTerm","setCarDetails","useState","searchResult","setSearchResult","isResultShown","setIsResultShown","onResultClick","car","find","toLowerCase","type","placeholder","onChange","e","term","input","target","value","Promise","resolve","reject","filter","indexOf","map","then","response","onBlur","setTimeout","onFocus","length","onClick","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8bc64134.chunk.js","sourcesContent":["export interface Car {\n  make: string;\n  model: string;\n  price: number;\n}\n\nexport interface CarDetails extends Car {\n  fuelType: string;\n  shiftType: typeof SHIFT_TYPES[keyof typeof SHIFT_TYPES];\n  features: string[];\n  colour: string;\n}\n\nexport const SHIFT_TYPES = {\n  automatic: \"Automatic\",\n  manual: \"Manual\",\n} as const;\n","// function to format currency\nfunction currencyFormatter (number: number, fractionDigits=0) {\n  const CurrencyFormatter = new Intl.NumberFormat('en-AU', {\n    style: 'currency',\n    currency: 'AUD',\n    maximumFractionDigits: fractionDigits\n  });\n  const {format} = CurrencyFormatter\n  return format(number)\n}\n\nexport default currencyFormatter;","import React from 'react';\nimport {CarDetails} from './car';\nimport currencyFormatter from '../helpers/currencyFormatter';\n\nexport interface IProps {\n    carDetails: CarDetails\n}\n\nexport const CarComponent: React.FC<IProps> = ({carDetails}) => {\n    if (carDetails.model) {\n        return (\n            <div className=\"car\">\n                <h1 className=\"car-name\">{carDetails.make} {carDetails.model}</h1>\n                <div className=\"car-info-1\">\n                    <div className=\"car-info-left\">\n                        <p>Fuel</p>\n                        <p>Shift</p>\n                        <p>Color</p>\n                    </div>\n                    <div className=\"divider\"></div>\n                    <div className=\"car-info-right\">\n                        <p>{carDetails.fuelType}</p>\n                        <p>{carDetails.shiftType}</p>\n                        <p>{carDetails.colour}</p>\n                    </div>\n                </div>\n                <div className=\"car-info-2\">\n                    <p className=\"search-result-info\">\n                        {currencyFormatter(carDetails.price)}\n                    </p>\n                    <p className=\"car-features\">{carDetails.features.join(' - ')}</p>\n                </div>\n            </div>\n        ) \n    } else {\n        return (\n            <div></div>\n        )\n    }\n    \n}","import { Car, CarDetails, SHIFT_TYPES } from \"./car\";\n\nexport function findCars(term: string) {\n  return new Promise<Car[]>((resolve, reject) => {\n    resolve(\n      carData\n        .filter(\n          // added extra .toLowerCase() allows users to search with capital letters\n          (car) => `${car.make} ${car.model}`.toLowerCase().indexOf(term.toLowerCase()) >= 0\n        )\n        .map((car) => ({\n          make: car.make,\n          model: car.model,\n          price: car.price,\n        }))\n    );\n  });\n}\n\nexport function getCarDetails(make: string, model: string) {\n  return carData.find(\n    (car) =>\n      car.make.toLowerCase() === make.toLowerCase() &&\n      car.model.toLowerCase() === model.toLowerCase()\n  );\n}\n\n/*\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPay no mind to the man behind the curtain...\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\nconst carData: CarDetails[] = [\n  {\n    make: \"Hyundai\",\n    model: \"i30\",\n    price: 23900,\n    fuelType: \"Unleaded\",\n    shiftType: SHIFT_TYPES.automatic,\n    features: [\"Fast\", \"Small\", \"Fun\", \"300k/l\"],\n    colour: \"Red\",\n  },\n  {\n    make: \"Alfa Romeo\",\n    model: \"Giulia\",\n    price: 70700,\n    fuelType: \"Unleaded\",\n    shiftType: SHIFT_TYPES.automatic,\n    features: [\"Makes you look important\", \"Big windows\"],\n    colour: \"Silver\",\n  },\n  {\n    make: \"Nissan\",\n    model: \"Navara\",\n    price: 39200,\n    fuelType: \"Unleaded\",\n    shiftType: SHIFT_TYPES.manual,\n    features: [\"It is definitely a car\", \"Will get you to new places\"],\n    colour: \"Gold\",\n  },\n  {\n    make: \"Mazda\",\n    model: \"2\",\n    price: 23990,\n    fuelType: \"Unleaded\",\n    shiftType: SHIFT_TYPES.automatic,\n    features: [\"Fast\", \"Small\", \"Fun\", \"300k/l\"],\n    colour: \"Red\",\n  },\n  {\n    make: \"Mazda\",\n    model: \"3\",\n    price: 43990,\n    fuelType: \"Unleaded\",\n    shiftType: SHIFT_TYPES.automatic,\n    features: [\"Hatchback\", \"Sleek\", \"Alloy\"],\n    colour: \"Black\",\n  },\n  {\n    make: \"Mazda\",\n    model: \"CX-5\",\n    price: 63990,\n    fuelType: \"Unleaded\",\n    shiftType: SHIFT_TYPES.automatic,\n    features: [\"Zoom zoom\", \"Super injection cooling\", \"Turbo thrust mode\"],\n    colour: \"Pink\",\n  },\n  {\n    make: \"Volkswagen\",\n    model: \"Amarok\",\n    price: 43990,\n    fuelType: \"Unleaded\",\n    shiftType: SHIFT_TYPES.manual,\n    features: [\"It can carry stuff\", \"Strong wheels\", \"Very big, much wow\"],\n    colour: \"Black\",\n  },\n];\n","import React, { useState } from 'react';\nimport {findCars, getCarDetails} from '../cars/car.api';\nimport {Car, CarDetails} from '../cars/car';\nimport {IProps as Props} from '../cars/car.component';\nimport currencyFormatter from '../helpers/currencyFormatter';\n\ninterface IProps {\n    searchTerm: string,\n    setSearchTerm: React.Dispatch<React.SetStateAction<string>>,\n    setCarDetails: React.Dispatch<React.SetStateAction<Props[\"carDetails\"]>>,\n}\n\nexport const SearchComponent: React.FC<IProps> = ({searchTerm, setSearchTerm, setCarDetails}) => {\n    let [searchResult, setSearchResult] = useState<Car[]>([]);\n    let [isResultShown, setIsResultShown] = useState<boolean>(false);\n\n    const onInputChange = function(e: React.ChangeEvent<HTMLInputElement>): void {\n        const input = e.target.value;\n        // update searchTerm\n        setSearchTerm(input);\n        // search in database with input\n        findCars(input).then((response: Car[]) => {\n            // set searchResult with the response\n            setSearchResult(response);\n            // show the result on the screen\n            setIsResultShown(true);\n        })\n    }\n\n    const onResultClick = function(car: Car): void {\n        let carDetails = getCarDetails(car.make, car.model) as CarDetails;\n        // update carDetails\n        setCarDetails(carDetails);\n        // reset searchTerm into empty string\n        setSearchTerm('');\n        // reset searchResult into empty array\n        setSearchResult([]);\n    }\n\n    const showSearchResult = function(): JSX.Element[] {\n        return searchResult.map((car: Car) => {\n            return (\n                <div \n                    className=\"search-result-car\" \n                    key={car.model} \n                    onClick={() => onResultClick(car)}  \n                >\n                    <p className=\"search-result-info\">{car.make} {car.model}</p>\n                    <p className=\"search-result-info\">{currencyFormatter(car.price)}</p>\n                </div>\n            )\n        })\n    }\n\n    const closeSearchResult = function(): void {\n        // delay closing searchResult to trigger onResultClick() if users click on a result\n        setTimeout(() => {\n            setIsResultShown(false);\n        }, 200) \n    }\n\n    const openSearchResult = function(): void {\n        setIsResultShown(true);\n    }\n\n    return (\n        <div className=\"search\">\n            <input \n                className=\"search-input\" \n                type=\"search\" \n                placeholder=\"Search...\"\n                onChange={onInputChange}\n                value={searchTerm}\n                onBlur={closeSearchResult}\n                onFocus={openSearchResult}\n                data-testid=\"search-input\"\n            />\n            {\n                isResultShown && \n                searchResult.length > 0 && \n                <div className=\"search-result\">\n                    {showSearchResult()}\n                </div>\n            }         \n        </div>\n    ) \n}","import React, {useState} from \"react\";\nimport {CarDetails, SHIFT_TYPES} from './cars/car';\n\nimport \"./App.css\";\nimport { CarComponent } from \"./cars/car.component\";\nimport { SearchComponent } from \"./search/search.component\";\n\nfunction App() {\n  // set initial state of searchTerm and carDetails as empty\n  let [searchTerm, setSearchTerm] = useState<string>('');\n  let [carDetails, setCarDetails] = useState<CarDetails>({\n    make: '',\n    model: '',\n    price: 0,\n    fuelType: '',\n    shiftType: SHIFT_TYPES.automatic,\n    features: [],\n    colour: '',\n  });\n  return (\n    <div className=\"app\">\n      <SearchComponent \n        searchTerm={searchTerm}\n        setSearchTerm={setSearchTerm}\n        setCarDetails={setCarDetails}\n      />\n      <CarComponent \n        carDetails={carDetails}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}